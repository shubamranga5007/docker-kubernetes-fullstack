apiVersion: apps/v1
kind: Deployment
metadata:
  name: database-service
spec:
  selector:
    matchLabels:
      app: database-service
  template:
    metadata:
      labels:
        app: database-service
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: database-service
          image: mysql:5.7
          imagePullPolicy: Always
          ports:
          - containerPort: 3306
          volumeMounts:
          - name: mysql-initdb
            mountPath: /docker-entrypoint-initdb.d
          env:
          - name: MYSQL_DATABASE
            value: "books"
          - name: MYSQL_USER
            value: "bookuser"
          - name: MYSQL_PASSWORD
            value: "password"
          - name: MYSQL_ROOT_PASSWORD
            value: "password"
      volumes:
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  initdb.sql: |
    USE books;
    CREATE TABLE authors (
    	id   INTEGER PRIMARY KEY AUTO_INCREMENT,
    	first_name	VARCHAR(255) NOT NULL,
    	middle_name	VARCHAR(255),
    	last_name	VARCHAR(255) NOT NULL
    ) CHARACTER SET utf8;
    INSERT INTO authors (first_name, last_name) VALUES("William","Shakespeare");
    INSERT INTO authors (first_name, middle_name, last_name) VALUES("Edgar", "Allan", "Poe");
    INSERT INTO authors (first_name, last_name) VALUES("Fyodor","Dostoyevsky");
    INSERT INTO authors (first_name, last_name) VALUES("Gabriel","Garcia Marquez");
---
apiVersion: v1
kind: Service
metadata:
  name: database-service
spec:
  type: ClusterIP
  selector:
    app: database-service
  ports:
  - name: databse-service
    port: 3306
    targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-service
spec:
  selector:
    matchLabels:
      app: backend-service
  template:
    metadata:
      labels:
        app: backend-service
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: shubamranga5007/back-one:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: LoadBalancer
  clusterIP: 10.96.5.11
  selector:
    app: backend-service
  ports:
  - name: service
    port: 3001
    nodePort: 30100
    targetPort: 3001
status:
  loadBalancer:
    ingress:
    - ip: 10.96.5.10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: server
          image: shubamranga5007/front-one:latest
          imagePullPolicy: Always
          ports:
          - containerPort: 3000
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/"
              port: 3000
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/"
              port: 3000
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-liveness-probe"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    nodePort: 30200
    targetPort: 3000
